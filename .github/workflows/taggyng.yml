name: Add New Tag After Merge

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  check_merge_status:
    runs-on: ubuntu-latest
    outputs:
      merged: ${{ steps.check_merge.outputs.merged }}
    steps:
      - name: Get PR Details
        id: check_merge
        run: |
          PR_MERGED=$(gh pr view ${{ github.event.pull_request.number }} --json merged -q .merged || echo "false")
          echo "merged=$PR_MERGED" >> $GITHUB_ENV
          echo "merged=$PR_MERGED" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  add_new_tag:
    name: Add New Tag
    runs-on: ubuntu-latest
    needs: check_merge_status
    if: ${{ needs.check_merge_status.outputs.merged == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1 || echo "v0.0.0")
          IFS='.' read -r -a TAG_PARTS <<< "${LATEST_TAG//v/}"
          PATCH=$((TAG_PARTS[2] + 1))
          NEW_TAG="v${TAG_PARTS[0]}.${TAG_PARTS[1]}.$PATCH"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and Push New Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG
