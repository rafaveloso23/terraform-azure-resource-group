name: Terraform API Request

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  get_repo_name:
    runs-on: ubuntu-latest
    outputs:
      sanitized_repo_name: ${{ steps.sanitize_repo.outputs.sanitized_repo_name }}
    steps:
      - name: Extract and Sanitize Repository Name
        id: sanitize_repo
        run: |
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          SANITIZED_NAME=$(echo "$REPO_NAME" | tr '.' '-')
          echo "sanitized_repo_name=$SANITIZED_NAME" >> "$GITHUB_OUTPUT"

  terraform_hcp:
    runs-on: ubuntu-latest
    needs: get_repo_name
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Inject Terraform Cloud Configuration
        run: |
          cat <<EOF > backend.tf
          terraform {
            cloud {
              organization = "veloso"
              hostname     = "app.terraform.io"

              workspaces {
                project = "modules"
                name    = "${{ needs.get_repo_name.outputs.sanitized_repo_name }}"
              }
            }
          }
          EOF

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TEAM_TOKEN }}

      - name: Initialize Terraform
        run: terraform init > /dev/null 2>&1 || true

      - name: remove providers file from modules
        run: |
          TARGET="./.terraform/modules/resource-group/providers.tf"

          if [ -f "$TARGET" ]; then
            rm "$TARGET"
            echo "Deleted $TARGET"
          else
            echo "File not found: $TARGET"
          fi

      - name: Plan Terraform
        run: terraform plan

